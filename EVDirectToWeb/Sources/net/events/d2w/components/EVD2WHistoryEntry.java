package net.events.d2w.components;
// Generated by the WOLips Templateengine Plug-in at May 27, 2007 8:50:00 PM

import com.webobjects.appserver.WOContext;
import com.webobjects.eoaccess.EOAttribute;
import com.webobjects.eoaccess.EOEntity;
import com.webobjects.eoaccess.EOModelGroup;
import com.webobjects.eocontrol.EOCustomObject;
import com.webobjects.eocontrol.EOGenericRecord;
import com.webobjects.foundation.NSDictionary;
import com.webobjects.foundation.NSKeyValueCoding;

import er.directtoweb.ERDCustomComponent;
import er.extensions.ERXStringUtilities;

public class EVD2WHistoryEntry extends ERDCustomComponent {

	private EOGenericRecord object;
	
	private EOGenericRecord modification;
	
	private NSDictionary dict;

    public EVD2WHistoryEntry(WOContext context) {
        super(context);
    }
    
	public String componentNameNew () {
		return this.componentNameForAttributeDisplay("currentValue");
	}
	
	public String componentNameOld () {
		return this.componentNameForAttributeDisplay("lastValue");
	}

	
	public String componentNameForAttributeDisplay (String key) {
		if (dict.valueForKey(key) instanceof String || dict.valueForKey(key) instanceof NSKeyValueCoding.Null) {
			// easy case first
			return "EVDisplayStringOrNull";
		}
		else {
			// we have to decide what component we shall use for the display of this object, we do this
			// based on the EOEntity information for our current object (eo) and our prototypes (there should
			// be a better way, this is a hack that relies on the prototypes, but okay, for now, it should work
			
			EOEntity entity = EOModelGroup.defaultGroup().entityNamed((String) ((EOCustomObject) this.d2wContext().valueForKey("object")).entityName());
			EOAttribute attribute = entity.attributeNamed((String) dict.valueForKey("attributeName"));
			
			if (attribute != null) {
				// we have a real attribute, not a relationship
				// for refactoring safety we use the last property of the keypath of the fully qualified class name
			
				if (attribute.prototypeName().equals("datetime")) {
					return ERXStringUtilities.lastPropertyKeyInKeyPath("EVDisplayDateTimeOrNull");
				}
				else if (attribute.prototypeName().equals("time")) {
					return ERXStringUtilities.lastPropertyKeyInKeyPath("EVDisplayTimeOrNull");
				}
				else if (attribute.prototypeName().equals("date")) {
					return ERXStringUtilities.lastPropertyKeyInKeyPath("EVDisplayDateOrNull");
				}
				else if (attribute.prototypeName().equals("boolean")) {
					return ERXStringUtilities.lastPropertyKeyInKeyPath("EVDisplayBoolean");
				}
			}
		}
		return "WOString";
	}

	/**
	 * @return the dict
	 */
	public NSDictionary dict() {
		return dict;
	}

	/**
	 * @param dict the dict to set
	 */
	public void setDict(NSDictionary dict) {
		this.dict = dict;
	}

	/**
	 * @return the object
	 */
	public EOGenericRecord object() {
		return object;
	}

	/**
	 * @param object the object to set
	 */
	public void setObject(EOGenericRecord object) {
		this.object = object;
	}

	/**
	 * @return the modification
	 */
	public EOGenericRecord modification() {
		return modification;
	}

	/**
	 * @param modification the modification to set
	 */
	public void setModification(EOGenericRecord modification) {
		this.modification = modification;
	}}