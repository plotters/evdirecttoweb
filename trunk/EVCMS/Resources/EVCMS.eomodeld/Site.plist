
{
    attributes = 
    (
       
       {
           columnName = client_id;
           name = clientId;
           prototypeName = key;
       }, 
       
       {
           columnName = default_title;
           name = defaultTitle;
           prototypeName = string256;
       }, 
       
       {
           allowsNull = N;
           columnName = name;
           name = name;
           prototypeName = string256;
       }, 
       
       {
           allowsNull = N;
           columnName = resource_path;
           name = resourcePath;
           prototypeName = string4k;
       }, 
       
       {
           columnName = site_id;
           name = siteId;
           prototypeName = key;
       }, 
       
       {
           allowsNull = Y;
           columnName = startpage_id;
           name = startpageId;
           prototypeName = key;
       }
    );
    className = net.events.cms.eo.Site;
    classProperties = 
    (
       client, 
       defaultTitle, 
       domains, 
       editors, 
       name, 
       pageWrappers, 
       pages, 
       resourcePath, 
       startpage, 
       stylesheets
    );
    externalName = sites;
    internalInfo = 
    {
        _clientClassPropertyNames = 
        (
           client, 
           defaultTitle, 
           domains, 
           editors, 
           name, 
           pageWrappers, 
           pages, 
           resourcePath, 
           startpage, 
           stylesheets
        );
    };
    name = Site;
    primaryKeyAttributes = 
    (
       siteId
    );
    relationships = 
    (
       
       {
           destination = Client;
           isMandatory = Y;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = clientId;
                  sourceAttribute = clientId;
              }
           );
           name = client;
       }, 
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = Domain;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = siteId;
                  sourceAttribute = siteId;
              }
           );
           name = domains;
       }, 
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = EditedSite;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = siteId;
                  sourceAttribute = siteId;
              }
           );
           name = editors;
       }, 
       
       {
           destination = PageWrapper;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = siteId;
                  sourceAttribute = siteId;
              }
           );
           name = pageWrappers;
       }, 
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = AbstractPage;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = siteId;
                  sourceAttribute = siteId;
              }
           );
           name = pages;
       }, 
       
       {
           destination = AbstractPage;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = pageId;
                  sourceAttribute = startpageId;
              }
           );
           name = startpage;
       }, 
       
       {
           destination = Stylesheet;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = siteId;
                  sourceAttribute = siteId;
              }
           );
           name = stylesheets;
       }
    );
}