
{
    attributes = 
    (
       
       {
           allowsNull = N;
           columnName = client_id;
           name = clientId;
           prototypeName = key;
       }, 
       
       {
           allowsNull = N;
           columnName = component_template;
           name = componentTemplate;
           prototypeName = string4m;
       }, 
       
       {
           columnName = default_title;
           name = defaultTitle;
           prototypeName = string256;
       }, 
       
       {
           allowsNull = N;
           columnName = name;
           name = name;
           prototypeName = string256;
       }, 
       
       {
           columnName = pagewrapper_id;
           name = pagewrapperId;
           prototypeName = key;
       }, 
       
       {
           columnName = site_id;
           name = siteId;
           prototypeName = key;
       }
    );
    className = net.events.cms.eo.PageWrapper;
    classProperties = 
    (
       client, 
       componentTemplate, 
       defaultTitle, 
       name, 
       pageElements, 
       pages, 
       site, 
       stylesheets
    );
    externalName = page_wrappers;
    internalInfo = 
    {};
    name = PageWrapper;
    primaryKeyAttributes = 
    (
       pagewrapperId
    );
    relationships = 
    (
       
       {
           destination = Client;
           isMandatory = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = clientId;
                  sourceAttribute = clientId;
              }
           );
           name = client;
       }, 
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = PageWrapperElement;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = wrapperId;
                  sourceAttribute = pagewrapperId;
              }
           );
           name = pageElements;
       }, 
       
       {
           deleteRule = EODeleteRuleDeny;
           destination = AbstractPage;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = pageWrapperId;
                  sourceAttribute = pagewrapperId;
              }
           );
           name = pages;
       }, 
       
       {
           destination = Site;
           isMandatory = Y;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = siteId;
                  sourceAttribute = siteId;
              }
           );
           name = site;
       }, 
       
       {
           definition = xStylesheetPageWrappers.stylesheet;
           name = stylesheets;
       }, 
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = XStylesheetPageWrapper;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = pageWrapperId;
                  sourceAttribute = pagewrapperId;
              }
           );
           name = xStylesheetPageWrappers;
           propagatesPrimaryKey = Y;
       }
    );
}