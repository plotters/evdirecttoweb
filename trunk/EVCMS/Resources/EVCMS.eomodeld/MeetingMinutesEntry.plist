{
    attributes = (
        {columnName = "assigned_to"; name = assignedTo; prototypeName = string4k; }, 
        {
            allowsNull = N; 
            columnName = "client_id"; 
            name = clientId; 
            prototypeName = key; 
        }, 
        {
            allowsNull = N; 
            columnName = "created_by_id"; 
            name = createdById; 
            prototypeName = key; 
        }, 
        {
            allowsNull = N; 
            columnName = "creation_time"; 
            name = creationTime; 
            prototypeName = datetime; 
        }, 
        {columnName = "due_date"; name = dueDate; prototypeName = date; }, 
        {allowsNull = N; columnName = entry; name = entry; prototypeName = string4m; }, 
        {
            allowsNull = N; 
            columnName = "entry_id"; 
            name = entryId; 
            prototypeName = integer; 
        }, 
        {columnName = "meeting_id"; name = meetingId; prototypeName = key; }, 
        {
            allowsNull = N; 
            columnName = "meeting_minutes_entry_id"; 
            name = meetingMinutesEntryId; 
            prototypeName = key; 
        }, 
        {
            allowsNull = N; 
            columnName = "meeting_minutes_id"; 
            name = meetingMinutesId; 
            prototypeName = key; 
        }, 
        {
            columnName = "original_due_date"; 
            name = originalDueDate; 
            prototypeName = date; 
        }, 
        {
            allowsNull = N; 
            columnName = "status_id"; 
            name = statusId; 
            prototypeName = key; 
        }, 
        {columnName = "type_id"; name = typeId; prototypeName = key; }
    ); 
    className = "net.events.cms.eo.MeetingMinutesEntry"; 
    classProperties = (
        assignedTo, 
        client, 
        createdBy, 
        creationTime, 
        dueDate, 
        entry, 
        entryId, 
        meeting, 
        meetingMinutes, 
        originalDueDate, 
        status, 
        type
    ); 
    externalName = "meeting_minutes_entries"; 
    fetchSpecificationDictionary = {}; 
    name = MeetingMinutesEntry; 
    primaryKeyAttributes = (meetingMinutesEntryId); 
    relationships = (
        {
            destination = Client; 
            isMandatory = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = clientId; sourceAttribute = clientId; }); 
            name = client; 
        }, 
        {
            destination = EventsUser; 
            isMandatory = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = contactId; sourceAttribute = createdById; }); 
            name = createdBy; 
        }, 
        {
            destination = Meeting; 
            isMandatory = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = meetingId; sourceAttribute = meetingId; }); 
            name = meeting; 
        }, 
        {
            destination = MeetingMinutes; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = (
                {destinationAttribute = meetingMinutesId; sourceAttribute = meetingMinutesId; }
            ); 
            name = meetingMinutes; 
        }, 
        {
            destination = EntryStatus; 
            isMandatory = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = entryStatusId; sourceAttribute = statusId; }); 
            name = status; 
        }, 
        {
            destination = EntryType; 
            isMandatory = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = entryTypeId; sourceAttribute = typeId; }); 
            name = type; 
        }
    ); 
}
