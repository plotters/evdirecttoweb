
{
    attributes = 
    (
       
       {
           allowsNull = N;
           columnName = client_id;
           name = clientId;
           prototypeName = key;
       }, 
       
       {
           allowsNull = N;
           columnName = clinical_trial_id;
           name = clinicalTrialId;
           prototypeName = key;
       }, 
       
       {
           allowsNull = N;
           columnName = name;
           name = name;
           prototypeName = string256;
       }, 
       
       {
           allowsNull = N;
           columnName = protocol_number;
           name = protocolNumber;
           prototypeName = string256;
       }
    );
    className = net.events.cms.eo.ClinicalTrial;
    classProperties = 
    (
       adverseEventOutcomes, 
       adverseEvents, 
       causalityAssessments, 
       client, 
       medicalDataSetTemplates, 
       name, 
       participants, 
       protocolNumber, 
       seriousnesses, 
       severityGrades
    );
    externalName = clinical_trials;
    internalInfo = 
    {};
    name = ClinicalTrial;
    primaryKeyAttributes = 
    (
       clinicalTrialId
    );
    relationships = 
    (
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = AdverseEventOutcome;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = clinicalTrialId;
                  sourceAttribute = clinicalTrialId;
              }
           );
           name = adverseEventOutcomes;
       }, 
       
       {
           deleteRule = EODeleteRuleDeny;
           destination = AdverseEvent;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = clinicalTrialId;
                  sourceAttribute = clinicalTrialId;
              }
           );
           name = adverseEvents;
       }, 
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = CausalityAssessment;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = clinicalTrialId;
                  sourceAttribute = clinicalTrialId;
              }
           );
           name = causalityAssessments;
       }, 
       
       {
           destination = Client;
           isMandatory = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = clientId;
                  sourceAttribute = clientId;
              }
           );
           name = client;
       }, 
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = MedicalDataSetTemplate;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = clinicalTrialId;
                  sourceAttribute = clinicalTrialId;
              }
           );
           name = medicalDataSetTemplates;
       }, 
       
       {
           destination = StudyParticipant;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = clinicalTrialId;
                  sourceAttribute = clinicalTrialId;
              }
           );
           name = participants;
       }, 
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = Seriousness;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = clinicalTrialId;
                  sourceAttribute = clinicalTrialId;
              }
           );
           name = seriousnesses;
       }, 
       
       {
           deleteRule = EODeleteRuleCascade;
           destination = SeverityGrade;
           isToMany = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = clinicalTrialId;
                  sourceAttribute = clinicalTrialId;
              }
           );
           name = severityGrades;
       }
    );
}