// Entity Modeler v1.0.1
{
	attributes = (
		{
			allowsNull = N;
			columnName = client_id;
			name = clientId;
			prototypeName = key;
		},
		{
			columnName = created_by_id;
			name = createdById;
			prototypeName = key;
		},
		{
			allowsNull = N;
			columnName = inheritance_type;
			name = inheritanceType;
			prototypeName = string256;
		},
		{
			allowsNull = N;
			columnName = note;
			name = note;
			prototypeName = string4m;
		},
		{
			columnName = note_id;
			name = noteId;
			prototypeName = key;
		}
	);
	className = net.events.cms.eo.Note;
	classProperties = (
		client,
		inheritanceType,
		note
	);
	externalName = notes;
	internalInfo = {
		_clientClassPropertyNames = (
			inheritanceType,
			note
		);
	};
	isAbstractEntity = Y;
	name = Note;
	primaryKeyAttributes = (
		noteId
	);
	relationships = (
		{
			destination = Client;
			isMandatory = Y;
			joinSemantic = EOInnerJoin;
			joins = (
				{
					destinationAttribute = clientId;
					sourceAttribute = clientId;
				}
			);
			name = client;
		}
	);
}