package net.events.cms.pages;
// Generated by the WOLips Templateengine Plug-in at Sep 1, 2007 4:46:55 PM

import net.events.cms.eo.*;
import net.events.cms.extensions.*;

import com.webobjects.appserver.*;
import com.webobjects.eoaccess.*;
import com.webobjects.eocontrol.*;
import com.webobjects.foundation.*;

import er.extensions.*;

public class EVGenericMessagePage extends EVCMSPage {
	
	private String message;
	private String cssClassForMessage;
	private Boolean shallTerminateSession;

	private AbstractPage previousPage;

    public EVGenericMessagePage(WOContext context) {
        super(context);
    }
    
    public String wrapperHtml () {
    	if (this.previousPage() != null && this.previousPage().pageWrapper() != null) {
    		return this.previousPage().pageWrapper().componentTemplate();
    	}
    	else {
    		// Make sure, this is available!
       		EOEditingContext ec = (EOEditingContext) ERXThreadStorage.valueForKey("EDITING_CONTEXT_FOR_RRLOOP");
       		PageWrapperEO wrapper = (PageWrapperEO) EOUtilities.objectWithQualifierFormat(ec, PageWrapperEO.ENTITY_NAME, "name = %@ and site.name = %@", new NSArray (new String[] {"EmptyLookAndFeel", "event-s"})); 
       		return wrapper.componentTemplate();
    	}
    }

	/**
	 * @return the message
	 */
	public String message() {
		return message;
	}

	/**
	 * @param message the message to set
	 */
	public void setMessage(String message) {
		this.message = message;
	}

	/**
	 * @return the shallTerminateSession
	 */
	public Boolean getShallTerminateSession() {
		return shallTerminateSession;
	}

	/**
	 * @param shallTerminateSession the shallTerminateSession to set
	 */
	public void setShallTerminateSession(Boolean shallTerminateSession) {
		this.shallTerminateSession = shallTerminateSession;
	}

	/**
	 * Calls terminate on the session if this was requested.
	 */
	public void sleep () {
		if (Boolean.TRUE.equals(shallTerminateSession)) {
			this.session().terminate();
		}
		super.sleep();
	}

	/**
	 * @return the cssClassForMessage
	 */
	public String cssClassForMessage() {
		return cssClassForMessage;
	}

	/**
	 * @param cssClassForMessage the cssClassForMessage to set
	 */
	public void setCssClassForMessage(String cssClassForMessage) {
		this.cssClassForMessage = cssClassForMessage;
	}

	/**
	 * @return the previousPage
	 */
	public AbstractPage previousPage() {
		return previousPage;
	}

	/**
	 * @param previousPage the previousPage to set
	 */
	public void setPreviousPage(AbstractPage previousPage) {
		this.previousPage = previousPage;
	}

}