// Entity Modeler v1.0.1
{
	attributes = (
		{
			columnName = category_description;
			name = categoryDescription;
			prototypeName = string4m;
		},
		{
			allowsNull = N;
			columnName = category_id;
			name = categoryId;
			prototypeName = key;
		},
		{
			allowsNull = N;
			columnName = client_id;
			name = clientId;
			prototypeName = key;
		},
		{
			allowsNull = N;
			columnName = created_by_id;
			name = createdById;
			prototypeName = key;
		},
		{
			allowsNull = N;
			columnName = creation_time;
			name = creationTime;
			prototypeName = datetime;
		},
		{
			allowsNull = N;
			columnName = name;
			name = name;
			prototypeName = string256;
		},
		{
			allowsNull = Y;
			columnName = parent_category_id;
			name = parentCategoryId;
			prototypeName = key;
		}
	);
	className = net.events.cms.eo.EventCategory;
	classProperties = (
		categoryDescription,
		client,
		createdBy,
		creationTime,
		name,
		parentCategory,
		subCategories
	);
	externalName = event_categories;
	internalInfo = {};
	name = EventCategory;
	primaryKeyAttributes = (
		categoryId
	);
	relationships = (
		{
			destination = Client;
			isMandatory = Y;
			joinSemantic = EOInnerJoin;
			joins = (
				{
					destinationAttribute = clientId;
					sourceAttribute = clientId;
				}
			);
			name = client;
		},
		{
			destination = EventsUser;
			isMandatory = Y;
			joinSemantic = EOInnerJoin;
			joins = (
				{
					destinationAttribute = contactId;
					sourceAttribute = createdById;
				}
			);
			name = createdBy;
		},
		{
			destination = EventCategory;
			joinSemantic = EOInnerJoin;
			joins = (
				{
					destinationAttribute = categoryId;
					sourceAttribute = parentCategoryId;
				}
			);
			name = parentCategory;
		},
		{
			destination = EventCategory;
			isToMany = Y;
			joinSemantic = EOInnerJoin;
			joins = (
				{
					destinationAttribute = parentCategoryId;
					sourceAttribute = categoryId;
				}
			);
			name = subCategories;
		}
	);
}