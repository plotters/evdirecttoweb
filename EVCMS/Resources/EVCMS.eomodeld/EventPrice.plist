{
    attributes = (
        {
            allowsNull = N; 
            columnName = "client_id"; 
            name = clientId; 
            prototypeName = key; 
        }, 
        {
            allowsNull = N; 
            columnName = "created_by_id"; 
            name = createdById; 
            prototypeName = key; 
        }, 
        {
            allowsNull = N; 
            columnName = "creation_time"; 
            name = creationTime; 
            prototypeName = datetime; 
        }, 
        {allowsNull = N; columnName = eventId; name = eventId; prototypeName = key; }, 
        {allowsNull = N; columnName = label; name = label; prototypeName = string256; }, 
        {allowsNull = N; columnName = price; name = price; prototypeName = money; }, 
        {
            allowsNull = N; 
            columnName = "price_id"; 
            name = priceId; 
            prototypeName = key; 
        }
    ); 
    className = "net.events.cms.eo.EventPrice"; 
    classProperties = (client, createdBy, creationTime, event, label, price); 
    externalName = "event_prices"; 
    fetchSpecificationDictionary = {}; 
    name = EventPrice; 
    primaryKeyAttributes = (priceId); 
    relationships = (
        {
            destination = Client; 
            isMandatory = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = clientId; sourceAttribute = clientId; }); 
            name = client; 
        }, 
        {
            destination = EventsUser; 
            isMandatory = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = contactId; sourceAttribute = createdById; }); 
            name = createdBy; 
        }, 
        {
            destination = Event; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = eventId; sourceAttribute = eventId; }); 
            name = event; 
        }
    ); 
}
