
{
    attributes = 
    (
       
       {
           allowsNull = N;
           columnName = client_id;
           name = clientId;
           prototypeName = key;
       }, 
       
       {
           columnName = edited_site_id;
           name = editedSiteId;
           prototypeName = key;
       }, 
       
       {
           columnName = user_id;
           name = eventsUserId;
           prototypeName = key;
       }, 
       
       {
           columnName = site_id;
           name = siteId;
           prototypeName = key;
       }
    );
    className = net.events.cms.eo.EditedSite;
    classProperties = 
    (
       client, 
       eventsUser, 
       site
    );
    externalName = edited_sites;
    internalInfo = 
    {
        _clientClassPropertyNames = 
        (
           eventsUser, 
           site
        );
    };
    name = EditedSite;
    primaryKeyAttributes = 
    (
       editedSiteId
    );
    relationships = 
    (
       
       {
           destination = Client;
           isMandatory = Y;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = clientId;
                  sourceAttribute = clientId;
              }
           );
           name = client;
       }, 
       
       {
           destination = EventsUser;
           isMandatory = Y;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = contactId;
                  sourceAttribute = eventsUserId;
              }
           );
           name = eventsUser;
       }, 
       
       {
           destination = Site;
           isMandatory = Y;
           isToMany = N;
           joinSemantic = EOInnerJoin;
           joins = 
           (
              
              {
                  destinationAttribute = siteId;
                  sourceAttribute = siteId;
              }
           );
           name = site;
       }
    );
}