{
    attributes = (
        {columnName = "blog_id"; name = blogId; prototypeName = key; }, 
        {columnName = "contact_id"; name = eventsUserId; prototypeName = key; }
    ); 
    className = EOGenericRecord; 
    externalName = "x_editor_blog"; 
    fetchSpecificationDictionary = {}; 
    name = XEditorBlog; 
    primaryKeyAttributes = (blogId, eventsUserId); 
    relationships = (
        {
            destination = Blog; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = blogId; sourceAttribute = blogId; }); 
            name = blog; 
        }, 
        {
            destination = EventsUser; 
            isMandatory = Y; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = contactId; sourceAttribute = eventsUserId; }); 
            name = eventsUser; 
        }
    ); 
}
